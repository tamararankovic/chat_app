{"version":3,"sources":["./src/environments/environment.ts","./src/app/services/websocket.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/logged-in/logged-in.component.ts","./src/app/components/logged-in/logged-in.component.html","./src/app/app.module.ts","./src/app/components/authentication/authentication.component.ts","./src/app/components/authentication/authentication.component.html","./src/app/services/user.service.ts","./src/app/components/user-list/user-list.component.ts","./src/app/components/user-list/user-list.component.html","./src/app/services/message.service.ts","./src/app/guard/route-guard.service.ts","./src/app/app-routing.module.ts","./src/app/components/messages/messages.component.ts","./src/app/components/messages/messages.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { webSocket, WebSocketSubject } from 'rxjs/webSocket';\nimport { catchError, tap, switchAll, share } from 'rxjs/operators';\nimport { EMPTY, Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WebsocketService {\n\n  private identifier : string = localStorage.getItem('identifier') == null ? \"\" : localStorage.getItem('identifier');\n  private WS_ENDPOINT : string = 'ws://localhost:8080/chat-war/ws/' + this.identifier;\n\n  private socket$: WebSocketSubject<any>;\n  private messagesSubject$ = new Subject();\n  public messages$ = this.messagesSubject$.pipe(switchAll(), share(), catchError(e => { throw e }));\n  \n  public connect(): void {\n    if (!this.socket$ || this.socket$.closed) {\n      this.socket$ = this.getNewWebSocket();\n      const messages = this.socket$.pipe(\n        tap({\n          error: error => console.log(error),\n        }), catchError(_ => EMPTY));\n      this.messagesSubject$.next(messages);\n      this.socket$.subscribe({\n        complete: () => { localStorage.removeItem('sessionId') }\n      })\n    }\n  }\n  \n  private getNewWebSocket() {\n    return webSocket({url: this.WS_ENDPOINT, deserializer: msg => msg.data});\n  }\n\n  sendMessage(msg: any) {\n    this.socket$.next(msg);\n  }\n\n  close() {\n    this.socket$.complete();\n    localStorage.removeItem('sessionId');\n  }\n}\n\n","import { Component, OnInit } from '@angular/core';\nimport { WebsocketService } from './services/websocket.service';\nimport { UserService } from './services/user.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'chat-client';\n\n  liveData$ = this.wsService.messages$;\n\n  constructor(private wsService : WebsocketService, public userService : UserService) {\n    this.liveData$.subscribe({\n      next : msg => this.handleMessage(msg as string)\n    });\n  }\n  \n  ngOnInit(): void {\n    this.wsService.connect();\n  }\n\n  handleMessage(message : string) {\n    if(message.match('.+:.*')) {\n      var type = message.split(':')[0];\n      var content = message.split(':')[1];\n      if(type == 'sessionId')\n        localStorage.setItem('sessionId', content);\n    }\n  }\n}\n","<mat-toolbar color=\"primary\" style=\"min-width: 100%; max-width: max-content;\"> \r\n    <span style=\"width: 10px;\"></span>\r\n    <span font-color=\"white\" style=\"margin-left: 10px;\">Chat application</span>\r\n    <span style=\"flex: 1 1 auto;\" name=\"unauthenticated-user\">\r\n      <button style=\"float: right;\" mat-button routerLink=\"../\" *ngIf=\"this.userService.isLoggedIn()\" (click) = \"this.userService.logout()\">\r\n        Log Out\r\n      </button>\r\n    </span>\r\n  </mat-toolbar>\r\n<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-logged-in',\n  templateUrl: './logged-in.component.html',\n  styleUrls: ['./logged-in.component.css']\n})\nexport class LoggedInComponent implements OnInit {\n\n  constructor() { }\n\n  public selected : string = null;\n\n  ngOnInit(): void {\n  }\n\n  receiveMessage($event) {\n    this.selected = $event\n  }\n}\n","<div>\n    <div style=\"width: 30%; display: inline-block; margin-right: 3%;\">\n        <app-user-list (messageEvent)=\"receiveMessage($event)\"></app-user-list>\n    </div>\n    <div style=\"width: 65%; display: inline-block;\">\n        <app-messages [selected]=\"selected\"></app-messages>\n    </div>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AuthenticationComponent } from './components/authentication/authentication.component';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatFormFieldModule } from '@angular/material/form-field'; \nimport { MatInputModule } from '@angular/material/input';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatSelectModule } from '@angular/material/select';\nimport { LoggedInComponent } from './components/logged-in/logged-in.component';\nimport { UserListComponent } from './components/user-list/user-list.component';\nimport { MessagesComponent } from './components/messages/messages.component';\nimport { MatListModule } from '@angular/material/list';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { CommonModule } from '@angular/common';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatPaginatorModule } from '@angular/material/paginator';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AuthenticationComponent,\n    LoggedInComponent,\n    UserListComponent,\n    MessagesComponent\n  ],\n  imports: [\n    BrowserModule,\n    CommonModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    MatButtonModule,\n    MatCardModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatRadioModule,\n    MatSnackBarModule,\n    MatTableModule,\n    MatSortModule,\n    MatSelectModule,\n    FormsModule,\n    MatListModule,\n    MatBadgeModule,\n    MatToolbarModule,\n    MatPaginatorModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\nimport { WebsocketService } from 'src/app/services/websocket.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-authentication',\n  templateUrl: './authentication.component.html',\n  styleUrls: ['./authentication.component.css']\n})\nexport class AuthenticationComponent implements OnInit {\n\n  public username : string;\n  public password : string;\n\n  liveData$ = this.wsService.messages$;\n\n  constructor(private userService : UserService, private wsService : WebsocketService, private snackBar : MatSnackBar, private router : Router) {\n    this.liveData$.subscribe({\n      next : msg => this.handleMessage(msg as string)\n    });\n  }\n\n  ngOnInit(): void {\n    this.wsService.connect();\n  }\n\n  login() {\n    this.userService.login(this.username, this.password);\n  }\n\n  signup() {\n    this.userService.signup(this.username, this.password);\n  }\n\n  handleMessage(message : string) {\n    if(message.match('.+:.*')) {\n      var type = message.split(':')[0];\n      var content = message.split(':')[1];\n      if(type == 'login')\n        this.handleLogin(content);\n      else if(type == 'register')\n        this.handleRegistration(content);\n    }\n  }\n\n  handleLogin(message : string) {\n    if(message.startsWith('OK ')) {\n      localStorage.setItem('identifier', message.substring(3));\n      this.router.navigate(['chat']);\n    }\n    else {\n      this.openSnackBar(message);\n    }\n  }\n\n  handleRegistration(message : string) {\n    this.openSnackBar(message);\n  }\n\n  openSnackBar(message : string) {\n    this.snackBar.open(message, 'Okay', {duration : 5000});\n  }\n}\n","<div style=\"height: 100%; display: flex; justify-content: center;\">\n\n    <mat-card class=\"mat-elevation-z8\" style=\"margin-top: 10%; width: 40%; height: 60%; display: flex; justify-content: center; align-items: center; height: max-content; padding-top: 20px; opacity: 85%;\">\n            <form #feedform=\"ngForm\" style=\"width: 80%;\" novalidate>\n    \n                <div class=\"item1\">\n                  <mat-form-field style=\"width:100%;\">\n                      <mat-label>Username</mat-label>\n                      <input matInput required id=\"usernameInput\" style=\"height: 40%;\" #name = \"ngModel\" name=\"c1\" [(ngModel)] = \"username\"/>\n                  </mat-form-field>\n                </div>\n                <div class=\"item3\">\n                    <mat-form-field style=\"width:100%;\">\n                        <mat-label>Password</mat-label>\n                        <input matInput required id=\"passwordInput\" style=\"height: 40%;\" #name2 = \"ngModel\" name=\"c2\" [(ngModel)] = \"password\" type=\"password\"/>\n                    </mat-form-field>\n                </div>\n\n                <div style=\"text-align: center; margin-top: 20px;\">\n                  <button id=\"loginButton\" [disabled] =\"name.invalid || name2.invalid\" mat-raised-button color=\"primary\" type=\"submit\" style=\"padding: 12px 32px; margin-right: 20px;\" (click)=\"login()\">Log in</button>\n                  <button id=\"signupButton\" [disabled] =\"name.invalid || name2.invalid\" mat-raised-button color=\"accent\" type=\"submit\" style=\"padding: 12px 32px; \" (click)=\"signup()\">Sign up</button>\n                </div>\n      \n            </form>\n    </mat-card>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http : HttpClient) { }\n\n  login(username, password) {\n    var data = new Object();\n    data['username'] = username;\n    data['password'] = password;\n    this.http.post('http://localhost:8080/chat-war/rest/users/login/' + localStorage.getItem('sessionId'), data).subscribe();\n  }\n\n  logout() {\n    this.http.delete('http://localhost:8080/chat-war/rest/users/loggedIn/' + localStorage.getItem('sessionId') + \"/\" + localStorage.getItem('identifier')).subscribe();\n    localStorage.removeItem('identifier');\n  }\n\n  signup(username, password) {\n    var data = new Object();\n    data['username'] = username;\n    data['password'] = password;\n    this.http.post('http://localhost:8080/chat-war/rest/users/register/' + localStorage.getItem('sessionId'), data, {headers : new HttpHeaders({ 'Content-Type': 'application/json' })}).subscribe();\n  }\n\n  getRegistered() {\n    this.http.get('http://localhost:8080/chat-war/rest/users/registered/' + localStorage.getItem('sessionId')).subscribe();\n  }\n\n  getLoggedIn() {\n    this.http.get('http://localhost:8080/chat-war/rest/users/loggedIn/' + localStorage.getItem('sessionId')).subscribe();\n  }\n\n  isLoggedIn() {\n    return localStorage.getItem('identifier') != null;\n  }\n}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { MessageService } from 'src/app/services/message.service';\nimport { UserService } from 'src/app/services/user.service';\nimport { WebsocketService } from 'src/app/services/websocket.service';\n\n@Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.css']\n})\nexport class UserListComponent implements OnInit {\n\n  liveData$ = this.wsService.messages$;\n\n  private loggedIn : string[] = [];\n  private registered : string[] = [];\n  public displayed : Object[] = [];\n\n  @Output() messageEvent = new EventEmitter<string>();\n  public selected : string = null;\n\n  constructor(private wsService : WebsocketService, private userService : UserService, private s : MessageService) { \n    this.liveData$.subscribe({\n      next : msg => this.handleMessage(msg as string)\n    });\n    this.wsService.connect();\n    setTimeout(() => {this.userService.getLoggedIn(); this.userService.getRegistered();}, 500)\n  }\n\n  ngOnInit(): void {\n    \n  }\n\n  handleMessage(message : string) {\n    if(message.match('.+:.*')) {\n      var type = message.split(':')[0];\n      var content = message.split(':')[1];\n      if(type == 'loggedInList') {\n        this.handleLoggedInList(content);\n      }\n      else if(type == 'registeredList') {\n        this.handleRegisteredList(content);\n      }\n    }\n  }\n\n  handleLoggedInList(message : string) {\n    this.loggedIn = message.split(',');\n    this.setUpDisplayedUsers();\n  }\n\n  handleRegisteredList(message : string) {\n    this.registered = message.split(',');\n    this.setUpDisplayedUsers();\n  }\n\n  setUpDisplayedUsers() {\n    this.displayed = [];\n    for(var user of this.registered) {\n      if(this.loggedIn.includes(user))\n        this.displayed.push({'user':user, 'active':true})\n      else\n        this.displayed.push({'user':user, 'active':false})\n    }\n    if(this.selected == null && this.displayed.length > 0) {\n      this.select(this.displayed[0]['user']);\n    }\n  }\n\n  sendMessage() {\n    this.messageEvent.emit(this.selected)\n  }\n\n  select(user : string) {\n    this.selected = user;\n    this.sendMessage();\n  }\n}\n","<div>\n  <mat-selection-list #users [multiple]=\"false\" (selectionChange)=\"select(users.selectedOptions.selected[0]?.value)\">\n    <mat-list-option *ngFor=\"let user of displayed\" [value]=\"user.user\" style=\"display: inline-block;\">\n      <div style=\"display: inline-block; color: forestgreen;\" *ngIf=\"user.active\">\n        {{user.user}}\n      </div>\n      <div style=\"display: inline-block;\" *ngIf=\"!user.active\">\n        {{user.user}}\n      </div>\n    </mat-list-option>\n</mat-selection-list>\n</div>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService {\n\n  constructor(private http : HttpClient) { }\n\n  private baseUrl : string = 'http://localhost:8080/chat-war/rest/messages/';\n\n  send(receiver : string, subject : string, content : string) {\n    this.http.post(this.baseUrl + \"user/\" + localStorage.getItem('sessionId') + \"/\" + receiver + \"/\" + subject + \"/\" + content, null).subscribe();\n  }\n\n  sendToAll(subject : string, content : string) {\n    this.http.post(this.baseUrl + \"all/\" + localStorage.getItem('sessionId') + \"/\" + subject + \"/\" + content, null).subscribe();\n  }\n\n  getMessages() {\n    this.http.get(this.baseUrl + localStorage.getItem('sessionId')).subscribe();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router } from '@angular/router';\nimport { UserService } from '../services/user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RouteGuardService implements CanActivate {\n\n  constructor(public router: Router, public userService : UserService) { }\n  \n  canActivate(route: ActivatedRouteSnapshot): boolean {\n    const onlyLoggedIn : boolean = route.data.onlyLoggedIn;    \n    if (onlyLoggedIn && !this.userService.isLoggedIn()) {\n      this.router.navigate(['']);\n      return false;\n    }\n    return true;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthenticationComponent } from './components/authentication/authentication.component';\nimport { LoggedInComponent } from './components/logged-in/logged-in.component';\nimport { RouteGuardService } from './guard/route-guard.service';\n\nconst routes: Routes = [\n  {path:'chat', component: LoggedInComponent, canActivate: [RouteGuardService], data: { onlyLoggedIn: true }},\n  {path:'', component: AuthenticationComponent, canActivate: [RouteGuardService], data: { onlyLoggedIn: false }}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, Input, OnInit, SimpleChanges, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MessageDto } from 'src/app/dto/message-dto';\nimport { MessageService } from 'src/app/services/message.service';\nimport { WebsocketService } from 'src/app/services/websocket.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n\n  constructor(private messageService : MessageService, private wsService : WebsocketService) { }\n\n  liveData$ = this.wsService.messages$;\n\n  @Input() selected : string = null;\n\n  public allMessages : MessageDto[] = [];\n  public displayedMessages : MessageDto[] = [];\n\n  public subject : string = \"\";\n  public content : string = \"\";\n\n  displayedColumns: string[] = ['date', 'message'];\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  dataSource = new MatTableDataSource<MessageDto>(this.displayedMessages);\n\n  ngOnInit(): void {\n    this.liveData$.subscribe({\n      next : msg => this.handleMessage(msg as string)\n    });\n    this.wsService.connect();\n    setTimeout(() => {this.messageService.getMessages()}, 500)\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.setUpDisplayedMessages();\n  }\n\n  setUpDisplayedMessages() {\n    this.displayedMessages = [];\n    this.sortMessagesByDateTimeCreated();\n    this.filterMessagesBySelectedUser();\n    this.dataSource.data = this.displayedMessages;\n    this.dataSource.paginator = this.paginator;\n  }\n\n  sortMessagesByDateTimeCreated() {\n    for(var message of this.allMessages) {\n      var dateTimeBase = message.dateTime.toString().split('.')[0]\n      var dateBase = dateTimeBase.split('T')[0]\n      var timeBase = dateTimeBase.split('T')[1]\n      message['date'] = new Date(Number(dateBase.split('-')[0]), Number(dateBase.split('-')[1]), Number(dateBase.split('-')[2]), Number(timeBase.split(':')[0]), Number(timeBase.split(':')[1]), Number(timeBase.split(':')[2]))\n    }\n    this.allMessages.sort((m1, m2) => m1['date'].getTime() - m2['date'].getTime())\n  }\n\n  filterMessagesBySelectedUser() {\n    for(var message of this.allMessages) {\n      if(message.otherUsername == this.selected) {\n        this.displayedMessages.push(message);\n      }\n    }\n  }\n\n  handleMessage(message : string) {\n    if(message.match('.+:.*')) {\n      var type = message.split(':')[0];\n      if(type == 'messageList') {\n        this.handleMessageList(message);\n      }\n      else if(type == 'message') {\n        this.handleNewMessage(message);\n      }\n    }\n  }\n\n  handleMessageList(message : string) {\n    message = message.substring(12, message.length)\n    this.allMessages = JSON.parse(message);\n    this.setUpDisplayedMessages();\n  }\n\n  handleNewMessage(message : string) {\n    message = message.substring(8, message.length)\n    this.allMessages.push(JSON.parse(message));\n    this.setUpDisplayedMessages();\n  }\n\n  send() {\n    this.messageService.send(this.selected, this.subject, this.content)\n    this.subject = \"\"\n    this.content = \"\"\n  }\n\n  sendToAll() {\n    this.messageService.sendToAll(this.subject, this.content)\n    this.subject = \"\"\n    this.content = \"\"\n  }\n}\n","<div [hidden]=\"selected == null\">\n\n    <h2 style=\"text-align: center; margin-top: 20px;\">Chat with {{selected}}</h2>\n\n    \n    <div class=\"mat-elevation-z8\" style=\"margin-top: 20px;\">\n      <table mat-table [dataSource]=\"dataSource\" style=\"width: 100%;\">\n      <ng-container matColumnDef=\"date\">\n        <th mat-header-cell *matHeaderCellDef hidden=\"true\"> . </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.date | date : 'medium'}} </td>\n      </ng-container>\n      <ng-container matColumnDef=\"message\">\n        <th mat-header-cell *matHeaderCellDef hidden=\"true\"> . </th>\n        <td mat-cell *matCellDef=\"let element\">\n            <div style=\"padding: 20px;\">\n              <div *ngIf=\"element.incoming === 'true'\"> Sender: {{element.otherUsername}}: </div>\n              <div *ngIf=\"element.incoming === 'false'\">Sender: You </div>\n              <div style=\"word-break: break-all;\"> Subject: {{element.subject}} </div>\n              <div style=\"word-break: break-all;\"> Content: {{element.content}} </div>\n            </div>\n          </td>\n        </ng-container>\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n      </table>\n      <mat-paginator [pageSizeOptions]=\"[3]\" showFirstLastButtons></mat-paginator>\n    </div>\n\n    <div class=\"mat-elevation-z8\" style=\"margin-top: 20px;\">\n      <form #feedform=\"ngForm\" style=\"width: 100%; padding-left: 10%; padding-right: 10%; padding-top: 20px; padding-bottom: 20px;\" novalidate>\n        <div>\n          <mat-form-field style=\"width:80%;\">\n              <mat-label>Subject</mat-label>\n              <input matInput required id=\"subjectInput\" style=\"height: 40%;\" #name = \"ngModel\" name=\"c1\" [(ngModel)] = \"subject\"/>\n          </mat-form-field>\n        </div>\n        <div>\n            <mat-form-field style=\"width:80%;\">\n                <mat-label>Content</mat-label>\n                <input matInput required id=\"contentInput\" style=\"height: 40%;\" #name2 = \"ngModel\" name=\"c2\" [(ngModel)] = \"content\"/>\n            </mat-form-field>\n        </div>\n        <div style=\"text-align: left; margin-top: 20px;\">\n          <button id=\"sendButton\" [disabled] =\"name.invalid || name2.invalid\" mat-raised-button color=\"primary\" type=\"submit\" style=\"padding: 12px 32px; margin-right: 20px;\" (click)=\"send()\">Send</button>\n          <button id=\"sendToAllButton\" [disabled] =\"name.invalid || name2.invalid\" mat-raised-button color=\"accent\" type=\"submit\" style=\"padding: 12px 32px; \" (click)=\"sendToAll()\">Send to all</button>\n        </div>\n    </form>\n    </div>\n\n</div>\n\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}